#BlueJ class context
comment0.params=
comment0.target=Scrollable()
comment0.text=\r\n\ Konstruktor\r\n
comment1.params=canleaveWorld
comment1.target=Scrollable(boolean)
comment1.text=\r\n\ Konstruktor\r\n
comment10.params=realY
comment10.target=void\ setRealY(int)
comment10.text=\r\n\ Diese\ Funktion\ definiert,\ wo\ ein\ das\ Objekt\ sich\ in\ Y\ befinden\ muss.\r\n\ \r\n\ @param\ die\ Ware\ Y\ Position\r\n
comment11.params=
comment11.target=int\ getRealX()
comment11.text=\r\n\ @return\ die\ Ware\ X\ Position\r\n
comment12.params=
comment12.target=int\ getRealY()
comment12.text=\r\n\ @return\ die\ Ware\ Y\ Position\r\n
comment13.params=distance
comment13.target=void\ move(int)
comment13.text=\r\n\ Move\ von\ Actor\ \u00FCberschrieben\ bzw\ erweitert,\ damit\ man\ die\ echte\ position\ (\ nicht\ nur\ \r\n\ die\ auf\ dem\ Bildschirm)\ bekommt\r\n
comment14.params=objClass
comment14.target=boolean\ isColliding(java.lang.Class)
comment14.text=\r\n\ Testet\ auf\ Kollision\ mit\ einer\ best\ KLasse\r\n
comment15.params=objClass
comment15.target=boolean\ isColliding2(java.lang.Class)
comment15.text=\r\n\ Testet\ auf\ Kollision\ mit\ einer\ best\ KLasse\r\n
comment16.params=objClass
comment16.target=boolean\ isColliding3(java.lang.Class)
comment17.params=objClass
comment17.target=boolean\ isColliding4(java.lang.Class)
comment18.params=scrble
comment18.target=boolean\ isRealCollision(Scrollable)
comment19.params=
comment19.target=void\ transparencytest()
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Diese\ Methode\ wird\ immer\ angerufen,\ wenn\ die\ Taste\ 'Act'\ oder\ 'Run'\ gedr\u00FCckt\ ist.\r\n\ Hier\ wird\ auf\ Mausklicks\ reagiert\ und\ eine\ Object\ der\ Bulet\ Klasse\ der\ Welt\ hinzugef\u00FCgt.\r\n
comment20.params=img
comment20.target=boolean[][]\ getTransPx(greenfoot.GreenfootImage)
comment20.text=\r\n\ gibt\ einen\ 2\ dimensionalen\ arraz\ mit\ den\ koordinaten\ der\ transparenten\ px\ zurueck\ (\ true,\ wenn\ nicht\ transparent\ )\r\n
comment3.params=img_tmp
comment3.target=void\ setvisibleImg(greenfoot.GreenfootImage)
comment3.text=\r\n\ Bild\ \u00FCbergeben,\ dass\ genutzt\ wird,\ wenn\ Objekt\ auf\ Bildschirm\ sichtbar.\r\n
comment4.params=vsbl
comment4.target=void\ setVisible(boolean)
comment4.text=\r\n\ Sichtbarkeit\ auf\ Bildschirm\ einstellen\r\n
comment5.params=
comment5.target=void\ checkvsbl()
comment5.text=\r\n\ wenn\ Objekt\ am\ Rand\ des\ Feldes,\ wird\ es\ unsichtbar,\ siehe\ setVisible()\r\n
comment6.params=
comment6.target=boolean\ atWorldEdge()
comment6.text=\r\n\ @return\ true,\ wenn\ weniger\ als\ atWorldEdge_grenze\ von\ Spielfeldrand\ entfernt\r\n
comment7.params=x_start\ y_start\ space_tmp
comment7.target=void\ init(int,\ int,\ ScrollableWorld)
comment7.text=\r\n\ einmal\ kurz\ Startwerte\ f\u00FCr\ real_x\ und\ real_y\ \u00FCbergeben\ ,\ da\ sie\ nicht\ von\ Beginn\ an\ auf\ z.B.\ getX()\ zugreifen\ k\u00F6nnen\r\n
comment8.params=
comment8.target=ScrollableWorld\ getScrWorld()
comment8.text=\r\n\ @return\ Die\ Welt,\ wo\ das\ Objekt\ sich\ befindet.\r\n
comment9.params=realX
comment9.target=void\ setRealX(int)
comment9.text=\r\n\ Diese\ Funktion\ definiert,\ wo\ ein\ das\ Objekt\ sich\ in\ X\ befinden\ muss.\r\n\ \r\n\ @param\ die\ Ware\ Y\ Position\r\n
numComments=21
